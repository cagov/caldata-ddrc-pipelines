name: nb_testing_pipeline
on:
  push:
    branches:
      - '**'
  #schedule:
    # Run a main hourly job
    #- cron: "27 * * * *"
  # Also allow for manual triggers
  workflow_dispatch:

#env:
#  SNOWFLAKE_PRIVATE_KEY: {{ SECRETS.SNOWFLAKE_PRIVATE_KEY_PRD }}
#  SNOWFLAKE_USER: {{ SECRETS.SNOWFLAKE_USER_PRD }}
#  SNOWFLAKE_ACCOUNT: {{ SECRETS.SNOWFLAKE_ACCOUNT }}
env:
  VAR1: 'workflow env value'
  
jobs:
    job1:
      runs-on: ubuntu-latest
      if: github.ref_name =='main'
      env: 
        VAR1: 'initial job1 env value'
      steps:
        - name: step0
          run: echo " step 0, var1==$VAR1"

        - name: job1-step1
          if: github.ref_name !='main'
          env:
            VAR1: 'job1 step 1 value'
          run: echo "job1-step1, var1==$VAR1"
          
        - name: job1-step2
          if: github.ref_name !='main'
          run: echo "JOB1-STEP2 ECHOED THIS $VAR1"
    job2:
      runs-on: ubuntu-latest
      steps:
        - name: job2-step2
          if: github.ref_name !='main'
          run: echo "job2-step2 echoed this $VAR1"
        
        
# jobs:
#   pipeline:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-python@v4
#         with:
#           python-version: "3.10"
#       - uses: actions/cache@v4
#         with:
#           key: {{ github.ref }}
#           path: .cache
#       - uses: snok/install-poetry@v1
#       - name: Install dependencies
#         run: |
#           poetry install
#       - name: Load data
#         env:
#           SNOWFLAKE_ROLE: LOADER_DDRC_PRD
#           SNOWFLAKE_DATABASE: RAW_DDRC_PRD
#           SNOWFLAKE_WAREHOUSE: LOADING_XS_DDRC_PRD
#         run: |
#           poetry run python -m jobs.load_agol_sources
#       - name: Build dbt project
#         env:
#           DBT_PROFILES_DIR: transform/ci
#           DBT_ANALYTICS_DB: ANALYTICS_DDRC_PRD
#           DBT_RAW_DB: RAW_DDRC_PRD
#           SNOWFLAKE_ROLE: TRANSFORMER_DDRC_PRD
#           SNOWFLAKE_DATABASE: TRANSFORM_DDRC_PRD
#           SNOWFLAKE_WAREHOUSE: TRANSFORMING_XS_DDRC_PRD
#         run: |
#           poetry run dbt deps --project-dir transform --target prd
#           poetry run dbt build --project-dir transform --target prd
#           poetry run dbt run-operation unload_ddrc_metrics --project-dir transform --target prd
