name: pipeline
on:
  schedule:
    # Run a main hourly job
    - cron: "27 * * * *"
  # Also allow for manual triggers
  workflow_dispatch:

env:
  SNOWFLAKE_PRIVATE_KEY: |
    ${{ github.ref_name =='main' && SECRETS.SNOWFLAKE_PRIVATE_KEY_PRD || SECRETS.SNOWFLAKE_PRIVATE_KEY_DEV }}
  SNOWFLAKE_USER: ${{ github.ref_name =='main' && SECRETS.SNOWFLAKE_USER_PRD || SECRETS.SNOWFLAKE_USER_DEV }}
  SNOWFLAKE_ACCOUNT: ${{ SECRETS.SNOWFLAKE_ACCOUNT }}

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: actions/cache@v4
        with:
          key: ${{ github.ref }}
          path: .cache
      - uses: snok/install-poetry@v1
      - name: Install dependencies
        run: |
          poetry install
      - name: Load data
        env:
          SNOWFLAKE_ROLE: ${{ github.ref_name =='main' && 'LOADER_DDRC_PRD' || 'LOADER_DDRC_DEV' }}
          SNOWFLAKE_DATABASE: ${{ github.ref_name =='main' && 'RAW_DDRC_PRD' || 'RAW_DDRC_DEV' }}
          SNOWFLAKE_WAREHOUSE: ${{ github.ref_name =='main' && 'LOADING_XS_DDRC_PRD' || 'LOADING_XS_DDRC_DEV' }}
        run: |
          poetry run python -m jobs.load_agol_sources
      - name: Build dbt project
        if: ${{ ! cancelled() }}
        env:
          DBT_PROFILES_DIR: transform/ci
          DBT_ANALYTICS_DB: ${{ github.ref_name =='main'  && 'ANALYTICS_DDRC_PRD' || 'ANALYTICS_DDRC_DEV' }}
          DBT_RAW_DB: ${{ github.ref_name =='main'  && 'RAW_DDRC_PRD' || 'RAW_DDRC_DEV' }}
          SNOWFLAKE_ROLE: ${{ github.ref_name =='main'  && 'TRANSFORMER_DDRC_PRD' || 'TRANSFORMER_DDRC_DEV' }}
          SNOWFLAKE_DATABASE: ${{ github.ref_name =='main'  && 'TRANSFORM_DDRC_PRD' || 'TRANSFORM_DDRC_DEV' }}
          SNOWFLAKE_WAREHOUSE: >-
            ${{ github.ref_name =='main' && 'TRANSFORMING_XS_DDRC_PRD' || 'TRANSFORMING_XS_DDRC_DEV' }}
          TARGET_ENV: ${{ github.ref_name =='main' && 'prd' || 'dev' }}
        run: |
          poetry run dbt deps --project-dir transform --target $TARGET_ENV
          poetry run dbt build --project-dir transform --target $TARGET_ENV
          poetry run dbt run-operation unload_ddrc_metrics --project-dir transform --target $TARGET_ENV

  slack-notification:
    runs-on: ubuntu-latest
    needs: pipeline
    if: ${{  failure() || cancelled()  }}
    steps:
      - uses: actions/checkout@v4
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_USERNAME: cagov Slackbot
          SLACK_TITLE: ⚠️ DDRC pipeline error! ⚠️
          SLACK_MESSAGE: |
            <@U04B65518U8> <@U07NQ5RKY1J> <@U014BKF82KH> <@U08F5VBSX6H> <@U071ZBU5L4W> <@U06CD0W49UJ>
            The hourly DDRC automated Snowflake data pipeline has an issue.
            Data will not be updated in Azure until this is resolved.
            ${{ github.event.workflow_run.html_url }}
          MSG_MINIMAL: actions url
          SLACK_WEBHOOK: >
            ${{ github.ref_name =='main' &&
            secrets.DDRC_SLACK_WEBHOOK_URL ||
            secrets.CALDATA_DATASERVICES_BOT_NOTIFICATIONS_SLACK_WEBHOOK_URL }}
